<!DOCTYPE html>
<html class="dark" lang="en"><head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<title>API Rate Limiter</title>
<link href="https://fonts.googleapis.com" rel="preconnect"/>
<link crossorigin="" href="https://fonts.gstatic.com" rel="preconnect"/>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&amp;display=swap" rel="stylesheet"/>
<link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
<script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
<script>
      tailwind.config = {
        darkMode: "class",
        theme: {
          extend: {
            colors: {
              primary: "#0c5fe4",
              "background-light": "#f5f7f8",
              "background-dark": "#101722",
            },
            fontFamily: {
              display: ["Inter"],
            },
            borderRadius: {
              DEFAULT: "0.25rem",
              lg: "0.5rem",
              xl: "0.75rem",
              full: "9999px",
            },
          },
        },
      };
    </script>
<style>
      .material-symbols-outlined {
        font-variation-settings: "FILL" 1, "wght" 400, "GRAD" 0, "opsz" 24;
      }
    </style>
<style>
    body {
      min-height: max(884px, 100dvh);
    }
  </style>
  </head>
<body class="bg-background-light dark:bg-background-dark font-display text-slate-800 dark:text-slate-200">
<div class="flex flex-col min-h-screen">
{{> header}}
<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Page Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Analytics</h1>
            <p class="mt-2 text-gray-600 dark:text-gray-400">Monitor your API usage and performance metrics</p>
        </div>
        
        <h2 class="px-2 text-xl font-bold text-slate-900 dark:text-white mb-4">API Calls</h2>
<div class="mt-4 grid gap-4 md:grid-cols-2">
<div class="rounded-xl border border-slate-200 bg-white p-4 dark:border-slate-800 dark:bg-slate-900/50">
<div class="flex flex-col gap-2">
<p class="text-sm font-medium text-slate-500 dark:text-slate-400">Total Calls</p>
<p id="totalCalls" class="text-3xl font-bold text-slate-900 dark:text-white">Loading...</p>
<div class="flex items-center gap-2 text-sm">
<p class="text-slate-500 dark:text-slate-400">Last 7 Days</p>
<p id="totalCallsChange" class="font-medium text-green-500">+0%</p>
</div>
</div>
<div class="mt-4 h-40">
<svg fill="none" height="100%" preserveAspectRatio="none" viewBox="0 0 472 150" width="100%" xmlns="http://www.w3.org/2000/svg">
<path class="text-primary" d="M0 109C18.1538 109 18.1538 21 36.3077 21C54.4615 21 54.4615 41 72.6154 41C90.7692 41 90.7692 93 108.923 93C127.077 93 127.077 33 145.231 33C163.385 33 163.385 101 181.538 101C199.692 101 199.692 61 217.846 61C236 61 236 45 254.154 45C272.308 45 272.308 121 290.462 121C308.615 121 308.615 149 326.769 149C344.923 149 344.923 1 363.077 1C381.231 1 381.231 81 399.385 81C417.538 81 417.538 129 435.692 129C453.846 129 453.846 25 472 25" stroke="currentColor" stroke-linecap="round" stroke-width="2"></path>
<path d="M0 109C18.1538 109 18.1538 21 36.3077 21C54.4615 21 54.4615 41 72.6154 41C90.7692 41 90.7692 93 108.923 93C127.077 93 127.077 33 145.231 33C163.385 33 163.385 101 181.538 101C199.692 101 199.692 61 217.846 61C236 61 236 45 254.154 45C272.308 45 272.308 121 290.462 121C308.615 121 308.615 149 326.769 149C344.923 149 344.923 1 363.077 1C381.231 1 381.231 81 399.385 81C417.538 81 417.538 129 435.692 129C453.846 129 453.846 25 472 25V149H0V109Z" fill="url(#paint0_linear_total)" fill-opacity="0.3"></path>
<defs>
<linearGradient gradientUnits="userSpaceOnUse" id="paint0_linear_total" x1="236" x2="236" y1="1" y2="149">
<stop class="text-primary" stop-color="currentColor"></stop>
<stop class="text-primary" offset="1" stop-color="currentColor" stop-opacity="0"></stop>
</linearGradient>
</defs>
</svg>
</div>
<div class="mt-2 flex justify-between text-xs font-medium text-slate-400 dark:text-slate-500">
<span>Mon</span><span>Tue</span><span>Wed</span><span>Thu</span><span>Fri</span><span>Sat</span><span>Sun</span>
</div>
</div>
<div class="rounded-xl border border-slate-200 bg-white p-4 dark:border-slate-800 dark:bg-slate-900/50">
<div class="flex flex-col gap-2">
<p class="text-sm font-medium text-slate-500 dark:text-slate-400">Successful Calls</p>
<p id="successfulCalls" class="text-3xl font-bold text-slate-900 dark:text-white">Loading...</p>
<div class="flex items-center gap-2 text-sm">
<p class="text-slate-500 dark:text-slate-400">Last 7 Days</p>
<p id="successfulCallsChange" class="font-medium text-green-500">+0%</p>
</div>
</div>
<div class="mt-4 grid h-40 grid-flow-col items-end justify-items-center gap-3 px-2">
<div class="w-full rounded bg-primary/20 dark:bg-primary/30" style="height: 40%"></div>
<div class="w-full rounded bg-primary/20 dark:bg-primary/30" style="height: 70%"></div>
<div class="w-full rounded bg-primary/20 dark:bg-primary/30" style="height: 60%"></div>
<div class="w-full rounded bg-primary/20 dark:bg-primary/30" style="height: 100%"></div>
<div class="w-full rounded bg-primary/20 dark:bg-primary/30" style="height: 60%"></div>
<div class="w-full rounded bg-primary/20 dark:bg-primary/30" style="height: 50%"></div>
<div class="w-full rounded bg-primary/20 dark:bg-primary/30" style="height: 70%"></div>
</div>
<div class="mt-2 flex justify-between text-xs font-medium text-slate-400 dark:text-slate-500">
<span>Mon</span><span>Tue</span><span>Wed</span><span>Thu</span><span>Fri</span><span>Sat</span><span>Sun</span>
</div>
</div>
</div>
<h2 class="mt-8 px-2 text-xl font-bold text-slate-900 dark:text-white">Geographic Usage</h2>
<div class="mt-4 overflow-hidden rounded-xl border border-slate-200 dark:border-slate-800">
<div class="aspect-video w-full bg-cover bg-center" style='background-image: url("https://lh3.googleusercontent.com/aida-public/AB6AXuA567k2THJTBqHf3kxnq6g-SG9oo2z3wXMdgUNIWURtn6_lvnDGXtxHn7eR1RslCh3QK-ulPdwC1eHtoAzixTMqDzDq8tn0rOv1HZwXzAIIncL5vRqe8CnuMK2oRIxCks3pvqQZWM1ieP3E0B78QbDiGTOQLlf00WK5jjaDxnSA3gIqhzhiqALBBVaQR-5k9ukOzWXjbgIlRoZbkIxRAuEiv1EFnu8hnKZSpBbp0Q0OUnmR5ktW-Z5Pp0y36CZRWpxyH4JB4_8voV0");'></div>
</div>
<h2 class="mt-8 px-2 text-xl font-bold text-slate-900 dark:text-white">Top Endpoints</h2>
<div class="mt-4 flow-root">
<div class="-my-2 divide-y divide-slate-200 overflow-x-auto dark:divide-slate-800">
<div class="inline-block min-w-full py-2 align-middle">
<table class="min-w-full divide-y divide-slate-200 dark:divide-slate-800">
<thead>
<tr>
<th class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-slate-900 dark:text-white sm:pl-0" scope="col">Endpoint</th>
<th class="px-3 py-3.5 text-left text-sm font-semibold text-slate-900 dark:text-white" scope="col">Calls</th>
<th class="px-3 py-3.5 text-left text-sm font-semibold text-slate-900 dark:text-white" scope="col">Success Rate</th>
</tr>
</thead>
<tbody class="divide-y divide-slate-200 dark:divide-slate-800">
<tr>
<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-slate-500 dark:text-slate-400 sm:pl-0">/users</td>
<td class="whitespace-nowrap px-3 py-4 text-sm text-slate-500 dark:text-slate-400">1,200</td>
<td class="whitespace-nowrap px-3 py-4 text-sm text-slate-500 dark:text-slate-400">98%</td>
</tr>
<tr>
<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-slate-500 dark:text-slate-400 sm:pl-0">/products</td>
<td class="whitespace-nowrap px-3 py-4 text-sm text-slate-500 dark:text-slate-400">850</td>
<td class="whitespace-nowrap px-3 py-4 text-sm text-slate-500 dark:text-slate-400">95%</td>
</tr>
<tr>
<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-slate-500 dark:text-slate-400 sm:pl-0">/orders</td>
<td class="whitespace-nowrap px-3 py-4 text-sm text-slate-500 dark:text-slate-400">600</td>
<td class="whitespace-nowrap px-3 py-4 text-sm text-slate-500 dark:text-slate-400">92%</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<h2 class="mt-8 px-2 text-xl font-bold text-slate-900 dark:text-white">Rate Limiting Events</h2>
<div class="mt-4 flow-root">
<ul class="-mb-8" role="list">
<li>
<div class="relative pb-8">
<span aria-hidden="true" class="absolute left-4 top-4 -ml-px h-full w-0.5 bg-slate-200 dark:bg-slate-800"></span>
<div class="relative flex items-start space-x-3">
<div>
<div class="relative flex h-8 w-8 items-center justify-center rounded-full bg-slate-200 text-slate-600 dark:bg-slate-800 dark:text-slate-300">
<span class="material-symbols-outlined text-lg"> timer </span>
</div>
</div>
<div class="min-w-0 flex-1 pt-1.5">
<p class="text-sm font-medium text-slate-900 dark:text-white">Rate Limit Hit</p>
<p class="text-sm text-slate-500 dark:text-slate-400">10:00 AM</p>
</div>
</div>
</div>
</li>
<li>
<div class="relative pb-8">
<span aria-hidden="true" class="absolute left-4 top-4 -ml-px h-full w-0.5 bg-slate-200 dark:bg-slate-800"></span>
<div class="relative flex items-start space-x-3">
<div>
<div class="relative flex h-8 w-8 items-center justify-center rounded-full bg-slate-200 text-slate-600 dark:bg-slate-800 dark:text-slate-300">
<span class="material-symbols-outlined text-lg"> timer </span>
</div>
</div>
<div class="min-w-0 flex-1 pt-1.5">
<p class="text-sm font-medium text-slate-900 dark:text-white">Rate Limit Hit</p>
<p class="text-sm text-slate-500 dark:text-slate-400">11:30 AM</p>
</div>
</div>
</div>
</li>
<li>
<div class="relative">
<div class="relative flex items-start space-x-3">
<div>
<div class="relative flex h-8 w-8 items-center justify-center rounded-full bg-slate-200 text-slate-600 dark:bg-slate-800 dark:text-slate-300">
<span class="material-symbols-outlined text-lg"> timer </span>
</div>
</div>
<div class="min-w-0 flex-1 pt-1.5">
<p class="text-sm font-medium text-slate-900 dark:text-white">Rate Limit Hit</p>
<p class="text-sm text-slate-500 dark:text-slate-400">1:00 PM</p>
</div>
</div>
</div>
</li>
</ul>
</div>
<h2 class="mt-8 px-2 text-xl font-bold text-slate-900 dark:text-white">Export Data</h2>
<div class="mt-4 grid grid-cols-2 gap-4">
<button class="flex h-10 w-full items-center justify-center rounded-lg bg-slate-200 text-sm font-bold text-slate-700 hover:bg-slate-300 dark:bg-slate-800 dark:text-slate-200 dark:hover:bg-slate-700">CSV</button>
<button class="flex h-10 w-full items-center justify-center rounded-lg bg-slate-200 text-sm font-bold text-slate-700 hover:bg-slate-300 dark:bg-slate-800 dark:text-slate-200 dark:hover:bg-slate-700">JSON</button>
</div>
        </div>
    </div>
</main>
</div>

<script>
    let authToken = localStorage.getItem('authToken');

    // Check authentication
    if (!authToken) {
        window.location.href = '/auth/login';
    }

    // Load analytics data
    async function loadAnalyticsData() {
        try {
            const response = await fetch('/analytics/summary', {
                headers: {
                    'Authorization': `Bearer ${authToken}`
                }
            });
            
            if (response.ok) {
                const data = await response.json();
                updateAnalyticsDisplay(data);
            } else if (response.status === 401) {
                window.location.href = '/auth/login';
            } else {
                // Use mock data if analytics endpoint is not ready
                const mockData = {
                    totalCalls: 12345,
                    successfulCalls: 10200,
                    rateLimitHits: 245,
                    topEndpoints: [
                        { endpoint: '/users', calls: 1200, successRate: 98 },
                        { endpoint: '/products', calls: 850, successRate: 95 },
                        { endpoint: '/orders', calls: 600, successRate: 92 }
                    ]
                };
                updateAnalyticsDisplay(mockData);
            }
        } catch (error) {
            console.error('Error loading analytics:', error);
            // Show error state or mock data
            const mockData = {
                totalCalls: 0,
                successfulCalls: 0,
                rateLimitHits: 0,
                topEndpoints: []
            };
            updateAnalyticsDisplay(mockData);
        }
    }

    // Update analytics display
    function updateAnalyticsDisplay(data) {
        // Update total calls
        const totalCallsElement = document.getElementById('totalCalls');
        if (totalCallsElement) {
            totalCallsElement.textContent = data.totalCalls?.toLocaleString() || '0';
        }

        // Update successful calls
        const successfulCallsElement = document.getElementById('successfulCalls');
        if (successfulCallsElement) {
            successfulCallsElement.textContent = data.successfulCalls?.toLocaleString() || '0';
        }

        // Calculate and update success rate changes
        const totalChange = document.getElementById('totalCallsChange');
        const successfulChange = document.getElementById('successfulCallsChange');
        
        if (totalChange && data.totalCallsChange !== undefined) {
            const changeValue = data.totalCallsChange;
            totalChange.textContent = `${changeValue >= 0 ? '+' : ''}${changeValue}%`;
            totalChange.className = `font-medium ${changeValue >= 0 ? 'text-green-500' : 'text-red-500'}`;
        }

        if (successfulChange && data.successfulCallsChange !== undefined) {
            const changeValue = data.successfulCallsChange;
            successfulChange.textContent = `${changeValue >= 0 ? '+' : ''}${changeValue}%`;
            successfulChange.className = `font-medium ${changeValue >= 0 ? 'text-green-500' : 'text-red-500'}`;
        }

        // Update top endpoints table if data is available
        if (data.topEndpoints && data.topEndpoints.length > 0) {
            updateTopEndpointsTable(data.topEndpoints);
        }
    }

    // Update top endpoints table
    function updateTopEndpointsTable(endpoints) {
        const tbody = document.querySelector('tbody');
        if (!tbody) return;

        tbody.innerHTML = endpoints.map(endpoint => `
            <tr>
                <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-slate-500 dark:text-slate-400 sm:pl-0">
                    ${endpoint.endpoint}
                </td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-slate-500 dark:text-slate-400">
                    ${endpoint.calls.toLocaleString()}
                </td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-slate-500 dark:text-slate-400">
                    ${endpoint.successRate}%
                </td>
            </tr>
        `).join('');
    }

    // Export data functions
    function exportCSV() {
        const csvContent = "data:text/csv;charset=utf-8,"
            + "Metric,Value\n"
            + `Total Calls,${document.getElementById('totalCalls')?.textContent || '0'}\n`
            + `Successful Calls,${document.getElementById('successfulCalls')?.textContent || '0'}\n`;
        
        const encodedUri = encodeURI(csvContent);
        const link = document.createElement("a");
        link.setAttribute("href", encodedUri);
        link.setAttribute("download", "api-analytics.csv");
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }

    function exportJSON() {
        const data = {
            totalCalls: document.getElementById('totalCalls')?.textContent || '0',
            successfulCalls: document.getElementById('successfulCalls')?.textContent || '0',
            exportedAt: new Date().toISOString()
        };
        
        const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(data, null, 2));
        const link = document.createElement("a");
        link.setAttribute("href", dataStr);
        link.setAttribute("download", "api-analytics.json");
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }

    // Add event listeners for export buttons
    document.addEventListener('DOMContentLoaded', () => {
        const exportButtons = document.querySelectorAll('button');
        exportButtons.forEach(button => {
            if (button.textContent.trim() === 'CSV') {
                button.addEventListener('click', exportCSV);
            } else if (button.textContent.trim() === 'JSON') {
                button.addEventListener('click', exportJSON);
            }
        });

        // Load analytics data
        loadAnalyticsData();
    });
</script>

<script src="/js/navigation.js"></script>
</body></html>