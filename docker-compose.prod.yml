version: '3.8'

services:
  # Your NestJS Application
  api-rate-limiter:
    build: .
    container_name: api-rate-limiter-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env.docker
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: api-rate-limiter-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=api_rate_limiter
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
    # Don't expose ports in production unless needed
    # ports:
    #   - "27017:27017"

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: api-rate-limiter-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - app-network
    # Don't expose ports in production unless needed
    # ports:
    #   - "6379:6379"

# Persistent volumes for data
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

# Network for container communication
networks:
  app-network:
    driver: bridge
